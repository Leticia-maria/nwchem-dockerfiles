name: nwchem_docker

on:
  push:
  pull_request:
  release:
  schedule:
    - cron: '0 0 * * SUN'
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      folders: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          nwchem-700.fedora.sockets: 'nwchem-700.fedora.sockets/*'
          nwchem-700.mpipr: 'nwchem-700.mpipr/*'
          nwchem-700.amazonlinux.sockets: 'nwchem-700.amazonlinux.sockets/*'
          nwchem-dev: 'nwchem-dev/*'
          builddebs.buster: 'builddebs.buster/*'
  docker:
    needs: changes
    strategy:
        matrix:
          folder: ${{ fromJSON(needs.changes.outputs.folders) }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ${{ matrix.folder }}
          outputs: type=docker,dest=/tmp/${{ matrix.folder }}.tar
          tags: user/app:latest
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myimage
          path: /tmp/${{ matrix.folder }}.tar
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ matrix.folder }}.tar
          docker image ls -a
